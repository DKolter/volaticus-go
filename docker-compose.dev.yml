services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev # Use development stage
    ports:
      - ${PORT}:${PORT}
    environment:
      STORAGE_PROVIDER: gcs
      GCS_PROJECT_ID: test-project
      GCS_BUCKET_NAME: test-bucket
      STORAGE_EMULATOR_HOST: gcs-emulator:4443/storage/v1/
      # Development-specific settings
      APP_ENV: development
      PORT: ${PORT}
      DB_HOST: psql
      DB_PORT: 5432
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_SCHEMA: ${DB_SCHEMA}
      SECRET: ${SECRET}
      BASE_URL: ${BASE_URL}
    volumes:
      - .:/app # Mount source code for live reload
    networks:
      - volaticus_network
    depends_on:
      - psql
      - gcs-emulator

  gcs-emulator:
    image: fsouza/fake-gcs-server:latest
    command: [
    "-scheme", "http",
    "-public-host", "gcs-emulator",
    "-external-url", "http://gcs-emulator:4443",
    "-port", "4443",
    "-log-level", "debug",
    "-host", "0.0.0.0"
  ]
    ports:
      - "4443:4443"
    networks:
      - volaticus_network
    volumes:
        - ./tmp/gcs:/storage
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:4443/storage/v1/b/test-bucket"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 5s

  psql:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - volaticus_network
    volumes:
      - psql_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 15s

volumes:
  psql_volume:
  gcs_data:

networks:
  volaticus_network:
    driver: bridge
